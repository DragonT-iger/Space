<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.space.user.mapper.Mem_InfoMapper">
	<!-- 회원가입 -->
	<insert id="createUser" parameterType="MemberInfo">
		insert into
		mem_info(MNAME,NICKNAME,USERID,MPWD,HP,BIRTH,STATUS,POINT,MRANK,BANK_CODE,ACCOUNT,POINTADD)
		values(#{mname},#{nickname},#{userid},#{mpwd},#{hp},#{birth:VARCHAR},#{status},0,1,#{bank_code:VARCHAR},#{account:VARCHAR},0)
	</insert>
	<!-- userid와 일치하는 회원체크 -->
	<select id="idCheck" resultType="int" parameterType="string">
		select
		count(*) from mem_info where userid=#{value}
	</select>

	<!-- userid 검색 -->
	<select id="getUser" resultType="MemberInfo"
		parameterType="string">
		select m.*,
		(select bank_name from bank_info b where b.bank_code= m.bank_code) bank_name
		from mem_info m where userid=#{value} <!-- 파라미터로들어오 value값 -->
	</select>

	<!-- <select id="findUser" resultType="MemberInfo" parameterType="MemberInfo"> 
		select * from mem_info where userid=#{userid} 파라미터로들어오 value값 </select> -->

	<select id="listUser" resultType="MemberInfo"
		parameterType="com.project.space.domain.PagingVO">
		select mem_info.*,
		decode(status,1,'등록유저',0,'일반유저',-2,'정지회원',-3,'탈퇴회원') statusStr
		from
		mem_info order by mdate asc
	</select>
	<!-- 회원수정 -->
	<update id="updateUser" parameterType="MemberInfo">
		update mem_info
		set
		nickname=#{nickname},mpwd=#{mpwd},hp=#{hp},bank_code=#{bank_code:VARCHAR},account=#{account:VARCHAR}
		where userid=#{userid}
	</update>
	<!-- 회원탈퇴 -->
	<delete id="deleteUser" parameterType="MemberInfo">
		delete from mem_info where userid=#{userid} and mpwd=#{mpwd}
	</delete>
	<!-- 은행코드 -->
	<select id="listBankcode" resultType="MemberInfo">
		select *
		from bank_info b order by bank_code asc

	</select>
</mapper>